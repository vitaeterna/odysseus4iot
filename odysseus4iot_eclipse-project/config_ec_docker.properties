#This is just for testing! Currently ignored
#Liegen,Gehen,Grasen,Stehen,Wiederkauen
input.labels       = Liegen,Grasen,Wiederkauen
input.accs         = 90.0,90.0,90.0
input.ids          = 0,0,0

#Input
input.sensors      = sensor_data_19_eval,sensor_data_20_eval
input.nodenames    = node1,node2,node3
input.nodesockets  = odysseus-edge:9101,odysseus-fog:9103,odysseus-cloud:9104
input.nodetypes    = edge,fog,cloud

#Safectory Specifications -  ARM based CC2640R2F,1,2 GHz Quad-Core CPU
#Smart City System Parking Solutions Specifications - ARM-Cortex M4 Mikrocontroller (STM32L071KZU6 oder STM32L471RET6),STM32L475VCT6
input.nodecpucaps  = 0,0,-1

#Safectory Specifications - 28kB,1GB,unlimited
input.nodememcaps  = 224000,8000000000,-1
#Smart City System Parking Solutions Specifications - 128kB,???,unlimited
#input.nodememcaps  = 1024000,8000000000,-1

input.edges        = 1~2,2~3,1~3

#Safectory Specifications - 1 Mbit/s (BLE 4.1 EDR Class1),???
input.edgeratecaps = 1000000,1000000,1000000
input.edgedelays   = 0,0,0
#Smart City System Parking Solutions Specifications - 980bit/s - 5.3kbit/s (LoRa), 85.6kbit/s GSM(2G), NB-IoT(ohne Gateway)
#input.edgeratecaps = 5300,85600

#Python RPC Server
pythonrpc.sockets = rpc_classification_1:9000,rpc_classification_2:9000,rpc_classification_3:9000

#SensorDB
sensordb.url      = jdbc:postgresql://postgres_cattledb:5432/cattledb
sensordb.user     = postgres
sensordb.password = postgres

#ModelDB - Remote Trained Models
modeldb.host     = postgres_cattledb
modeldb.port     = 5432
modeldb.database = cattledb
modeldb.table    = trained_models
modeldb.column   = model_content
modeldb.user     = postgres
modeldb.password = postgres

#PredictionDB
predictiondb.url      = jdbc:postgresql://postgres_cattledb:5432/cattledb
predictiondb.user     = postgres
predictiondb.password = postgres

#Sensor Schema Mappings - What is the data needed from the sensors?
schema.ax     = ax
schema.ay     = ay
schema.az     = az
schema.gx     = ox
schema.gy     = oy
schema.gz     = oz
schema.accmag = ax,ay,az
schema.gyrmag = ox,oy,oz

#Preprocessing - What is needed as input for the feature calculation?
preprocessing.ax = ax
preprocessing.ay = ay
preprocessing.az = az
preprocessing.gx = ox
preprocessing.gy = oy
preprocessing.gz = oz
preprocessing.accmag = amag
preprocessing.gyrmag = omag

#Features - What are the exact names of the aggregation functions within Odysseus?
#No underscores on the right hand side allowed! They are used to dynamically add information to those names
feature.min        = min
feature.max        = max
feature.mean       = avg
feature.median     = median
feature.stdev      = stddev
feature.iqr        = iqr
feature.rms        = rms
feature.mcr        = mcr
feature.kurt       = kurtosis
feature.skew       = skewness
feature.energy     = frenergy
feature.peakfreq   = frpeakfreq
feature.freqentrpy = frdmentropy
feature.firstcpn   = frmag1
feature.secondcpn  = frmag2
feature.thirdcpn   = frmag3
feature.fourthcpn  = frmag4
feature.fifthcpn   = frmag5
